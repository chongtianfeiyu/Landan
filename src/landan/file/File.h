/*********************************
*Class: File
*Description:
*Author: jkeon
**********************************/

#ifndef _FILE_H_
#define _FILE_H_


//////////////////////////////////////////////////////////////////////
// INCLUDES //////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

#include <landan/core/LandanTypes.h>

//////////////////////////////////////////////////////////////////////
// NAMESPACE /////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

namespace landan {

	//////////////////////////////////////////////////////////////////////
	// FORWARD DECLARATIONS //////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	class ByteArray;

	//////////////////////////////////////////////////////////////////////
	// GLOBALS ///////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////


	//////////////////////////////////////////////////////////////////////
	// CLASS DECLARATION /////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	class File {

	//PUBLIC FUNCTIONS
	public:
		File(tstring path);
		~File();

		bool Exists();
		void WriteBytes(ByteArray &bytes);
		bool Close();

	//PUBLIC VARIABLES
	public:
	

	//PROTECTED FUNCTIONS
	protected:

	//PROTECTED VARIABLES
	protected:



	//PRIVATE FUNCTIONS
	private:
		File(const File &other);
		File& operator = (const File &other);

	//PRIVATE VARIABLES
	private:
		tstring m_path;

	
	};

	//////////////////////////////////////////////////////////////////////
	// STATICS ///////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////


}
#endif
