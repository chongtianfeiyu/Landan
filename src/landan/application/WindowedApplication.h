/*********************************
*Class: WindowedApplication
*Description:
*Author: jkeon
**********************************/

#ifndef _WINDOWEDAPPLICATION_H_
#define _WINDOWEDAPPLICATION_H_


//////////////////////////////////////////////////////////////////////
// INCLUDES //////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

#include <landan/application/IApplication.h>

//////////////////////////////////////////////////////////////////////
// NAMESPACE /////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

namespace landan {


	//////////////////////////////////////////////////////////////////////
	// GLOBALS ///////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////


	//////////////////////////////////////////////////////////////////////
	// CLASS DECLARATION /////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	class WindowedApplication : public IApplication 
	{

		//PUBLIC FUNCTIONS
	public:
		WindowedApplication();
		virtual ~WindowedApplication();

		virtual void ApplyConfig(ApplicationConfig *appConfig);
		virtual void Init();
		virtual void Update(f32 deltaMilliSeconds);
		virtual void Render();
		virtual void Destroy();


		//PUBLIC VARIABLES
	public:


		//PROTECTED FUNCTIONS
	protected:

		//PROTECTED VARIABLES
	protected:



		//PRIVATE FUNCTIONS
	private:
		WindowedApplication(const WindowedApplication &other);
		WindowedApplication& operator = (const WindowedApplication &other);

		//PRIVATE VARIABLES
	private:


	};

	//////////////////////////////////////////////////////////////////////
	// STATICS ///////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////


}
#endif